.fluidbox-ghost,.fluidbox-overlay,.fluidbox-wrap{transition:all .25s ease-in-out;-webkit-transition:all .25s ease-in-out}.fluidbox-ghost,.fluidbox-wrap{background-position:center center}.feed #loadmore a,a{text-decoration:none}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;font-size:100%;vertical-align:baseline}blockquote,q{font-family:"Noto Serif",serif}body,cite,h1,h2,h3,h4{font-family:"Noto Sans",Helvetica,"Helvetica Neue",Arial,sans-serif}em,q{font-style:italic}table{border-collapse:collapse;border-spacing:0}caption,td,th{text-align:left;font-weight:400;vertical-align:middle}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}a img{border:none}elements-of-type(html5-block){display:block}.header.cover-image .blog-content .blog-description,.hidden{display:none}.fluidbox{outline:0}.fluidbox-overlay{position:fixed;top:0;right:0;bottom:0;left:0;background-color:rgba(255,255,255,.9);opacity:0;cursor:pointer;cursor:-webkit-zoom-out;cursor:-moz-zoom-out}.fluidbox-wrap{position:relative;margin:0 auto;background-size:cover}.fluidbox-ghost{position:absolute;background-size:100% 100%;cursor:-webkit-zoom-in;cursor:-moz-zoom-in}.fluidbox-closed .fluidbox-ghost{-webkit-transition-delay:0,0,.25s,0;transition-delay:0,0,.25s,0;-webkit-transition-property:top,left,opacity,-webkit-transform;transition-property:top,left,opacity,transform}.fluidbox-closed .fluidbox-wrap img{-webkit-transition-delay:.25s;transition-delay:.25s;-webkit-transition-duration:0s;transition-duration:0s;-webkit-transition-property:opacity;transition-property:opacity}.fluidbox-opened .fluidbox-ghost{cursor:-webkit-zoom-out;cursor:-moz-zoom-out}.animated{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:both;animation-fill-mode:both}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}.fadeIn{-webkit-animation-name:fadeIn;animation-name:fadeIn}@-webkit-keyframes fadeInUp{0%{opacity:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}100%{opacity:1;-webkit-transform:none;transform:none}}@keyframes fadeInUp{0%{opacity:0;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}100%{opacity:1;-webkit-transform:none;transform:none}}.fadeInUp{-webkit-animation-name:fadeInUp;animation-name:fadeInUp}@media (min-width:1000px){.alignleft,.alignright{margin-bottom:1em;padding-bottom:0;width:300px}.alignleft img,.alignright img{margin:0}.alignleft{float:left;margin-right:2em;margin-left:-160px}.alignleft q{margin:0;width:initial;text-align:right}blockquote.alignleft{padding-right:20px;padding-left:0;border-right:4px solid #e6e6e6;border-left:0;text-align:right}q.alignleft{margin-top:0;text-align:right}.alignright{float:right;margin-right:-160px;margin-left:2em}.alignright q,.alignrightq{margin:0;width:initial;text-align:left}q.alignright{margin:0;text-align:left}}.header.cover-image{position:relative}@media (min-width:400px){.header.cover-image{height:500px;background-position:center;background-size:cover}}@media (min-width:550px){.header.cover-image{height:600px;background-position:center;background-size:cover}}@media (min-width:1400px){.header.cover-image{height:700px;background-position:center;background-size:cover}}body,html{height:100%}.header.cover-image .blog-content{position:absolute;box-sizing:border-box;padding:0 20px;width:100%}.header.cover-image .blog-content .blog-title{margin:0;color:#FFF;color:#fff;letter-spacing:0;font-size:14px;font-size:1.4rem}.header.cover-image .blog-content .blog-title:hover,.header.cover-image .blog-content .links a,.header.cover-image .blog-content .links a:hover{color:#fff}.author-data>span,.blog-data>span,.page-data>span,.post-data>span,.tag-data>span,cite,img,q{display:block}.header.cover-image a{color:gray}.header.cover-image a:hover{color:#fff}.feed{position:relative;padding-bottom:40px}.feed #loadmore{position:absolute;bottom:5px;left:50%;text-transform:uppercase;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);-webkit-animation-delay:1s;animation-delay:1s}.feed #loadmore a{padding:10px 20px;border:0;background:#fff;font-size:14px;font-size:1.4rem;cursor:pointer}.feed #loadmore a:hover{border:0;background:#D5D5D5;text-decoration:none}.feed .post{float:left;box-sizing:border-box;margin:inherit;margin-bottom:20px;max-width:100%;width:100%;background:#FFF;-webkit-transition:opacity 1s;transition:opacity 1s}@media (min-width:550px){.feed .post{width:calc(50% - (20px / 2))}.feed .post.featured{width:100%}}@media (min-width:1000px){.feed .post{width:calc((100% - (20px* 2)) / 3)}.feed .post.featured{width:calc((100% - (20px * 2)) * (2 / 3) + 20px)}}@media (min-width:1400px){.feed .post{width:calc((100% - (20px * 3)) / 4)}.feed .post.featured{width:calc((100% - (20px * 3)) / 2 + 20px)}}.feed .post a{border-color:transparent}.feed .post a:hover,a:hover{border-color:#000}.feed .post .post-image{position:relative;display:block;overflow:hidden;border:0;background:#000;color:#FFF}.feed .post .post-image img{margin:0;max-width:100%;width:100%;opacity:.5;-webkit-transition:all ease .5s;transition:all ease .5s}.feed .post .post-image .post-title{position:absolute;bottom:0;left:0;font-weight:400;-webkit-transition:-webkit-transform ease .5s;transition:transform ease .5s}h1,h2,h3,h4,strong{font-weight:700}.feed .post .post-image:hover img{opacity:1;-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}.feed .post .post-image:hover .post-title{-webkit-transform:translateY(110%);-ms-transform:translateY(110%);transform:translateY(110%)}.feed .post .post-title{margin:0 20px 20px 20px;padding-top:20px;font-size:25px;font-size:2.5rem}.feed .post .post-content{box-sizing:border-box;margin:15px 20px;color:#999;font-size:14px;font-size:1.4rem;cursor:default}.feed .post .post-meta{box-sizing:border-box;padding:15px 20px;width:100%;border-top:1px solid #F7F7F7;background:#FFF;color:#CCC;font-size:14px;font-size:1.4rem;cursor:default}.feed .post .post-meta a{color:inherit}.feed .post .post-meta a:hover{color:#000}.feed .post .post-meta .author,.feed .post .post-meta .date{margin-right:10px}.author-data,.blog-data,.page-data,.post-data,.tag-data{color:gray;font-size:14px;font-size:1.4rem;cursor:default}.author-data a,.blog-data a,.page-data a,.post-data a,.tag-data a{border:0;color:#8D8D8D}.author-data a:hover,.blog-data a:hover,.page-data a:hover,.post-data a:hover,.tag-data a:hover{color:#FFF}a,a:hover{color:#000}.author-data .date,.author-data .location,.blog-data .date,.blog-data .location,.page-data .date,.page-data .location,.post-data .date,.post-data .location,.tag-data .date,.tag-data .location{-webkit-animation-delay:.75s;animation-delay:.75s}.author-data .tags,.author-data .website,.blog-data .tags,.blog-data .website,.page-data .tags,.page-data .website,.post-data .tags,.post-data .website,.tag-data .tags,.tag-data .website{-webkit-animation-delay:1s;animation-delay:1s}.author-data .tags i,.author-data .website i,.blog-data .tags i,.blog-data .website i,.page-data .tags i,.page-data .website i,.post-data .tags i,.post-data .website i,.tag-data .tags i,.tag-data .website i{font-size:85%}h1,h2{font-size:35px}body,cite{font-size:14px}.author-data .author,.author-data .bio,.blog-data .author,.blog-data .bio,.page-data .author,.page-data .bio,.post-data .author,.post-data .bio,.tag-data .author,.tag-data .bio{-webkit-animation-delay:1.25s;animation-delay:1.25s}html{line-height:1;max-height:100%;font-size:62.5%}body{overflow-y:scroll;min-height:100%;background:#f2f2f2;color:rgba(0,0,0,.8);font-size:1.4rem;line-height:1.8}h1,h2,h3,h4{margin-top:30px;margin-bottom:10px;line-height:1.2}h1 a,h2 a,h3 a,h4 a{border:0}h1{letter-spacing:-2px;font-size:3.5rem}@media (min-width:400px){body{font-size:18px;font-size:1.8rem}h1,h2,h3,h4{margin-top:40px;margin-bottom:10px}h1{font-size:40px;font-size:4rem}}@media (min-width:550px){h1{font-size:50px;font-size:5rem}}@media (min-width:800px){h1{font-size:60px;font-size:6rem}}h2{font-size:3.5rem}h3{font-size:25px;font-size:2.5rem}h4{font-size:15px;font-size:1.5rem}a{border-bottom:1px solid rgba(0,0,0,.3);-webkit-transition:all .2s;transition:all .2s}blockquote,canvas,figure,form,iframe,p{margin-bottom:20px}.note{padding:10px;background:#e6e6e6}mark{padding:2px;background-color:#FDFFB6;box-shadow:#FDFFB6 0 0 5px}sup{vertical-align:super;font-size:13px;font-size:1.3rem}blockquote{padding-left:20px;border-left:4px solid #e6e6e6}blockquote img{margin:20px 0!important;width:100%!important}q{text-align:center;font-size:125%}@media (min-width:550px){q{margin-top:40px;margin-bottom:40px;margin-left:auto;margin-left:calc(0 - 20px);max-width:100%;max-width:calc(100% + 40px);width:100%;width:calc(100% + 40px)}}cite{color:#ccc;text-transform:capitalize;font-style:normal;font-size:1.4rem}code,pre code{font-family:Inconsolata,Consolas,"Droid Sans Mono","Courier New"}cite a{border:none;color:inherit}.gallery a,.header a,hr{border:0}cite:before{content:"\2014 \2009"}ol,ul{margin-top:10px;margin-bottom:20px;margin-left:20px}ol li,ul li{margin:0}ul{list-style:square}ol ol,ol ul,ul ol,ul ul{margin-top:0;margin-bottom:0;margin-left:20px}ol{margin-left:25px;list-style:decimal}code{padding:3px 6px;background:#F1F1F1;color:#000;font-size:1.5rem}code,pre code{font-size:15px}pre{margin-top:30px;margin-right:20px;margin-bottom:10px;margin-left:20px;word-wrap:break-word}pre code{padding:0;background:0 0;font-size:1.5rem}hr{height:4px;background:#e6e6e6}.gallery{margin-left:-5px;padding:5px;width:100%}.gallery a:hover{border-color:none}.gallery img{margin:auto;width:auto;height:auto}img{margin-left:auto;margin-left:calc(1px - 21px);max-width:100%;max-width:calc(100% + 40px);width:100%;width:calc(100% + 40px);height:auto}@media (min-width:550px){img{margin-top:40px;margin-bottom:40px;margin-left:auto;margin-left:calc(0 - 20px);max-width:100%;max-width:calc(100% + 40px)}}@media (min-width:800px){img{margin-top:40px;margin-bottom:40px;margin-left:-5%;max-width:110%;width:110%}img [src$="#full"],img[src$="#large"]{margin-top:40px;margin-bottom:40px;margin-left:-10%;max-width:120%;width:120%}}@media (min-width:1400px){img{margin-top:40px;margin-bottom:40px;margin-left:-25%;max-width:150%;width:150%}img [src$="#full"],img[src$="#large"]{margin-left:-50%;max-width:200%;width:200%}}img[src$="#small"]{margin-right:auto;margin-left:auto;max-width:100%;width:auto}img[src$="#large"]{margin-left:calc(0 - 20px);max-width:calc(100% + 40px)}img:not(.full-loaded){-webkit-transition:all .2s;transition:all .2s}img.full-loaded{position:absolute!important;left:0!important;margin:0!important;max-width:100%!important;width:100%!important}@media (min-width:800px){.wide{margin-top:40px;margin-bottom:40px;margin-left:-10%;max-width:120%;width:120%}}@media (min-width:1400px){.wide{margin-left:-50%;max-width:200%;width:200%}}@media (min-width:800px){.gallery{margin-top:40px;margin-bottom:40px;margin-left:calc(-10% - 5px);max-width:120%;width:120%}}@media (min-width:1400px){.gallery{margin-left:calc(-50% - 5px);max-width:200%;width:200%}}@media (min-width:800px){.full-image-container{margin:40px 0}}.fluid-width-video-wrapper{margin-top:30px;margin-bottom:10px}.main{position:relative;z-index:1;box-sizing:border-box;padding:20px}.archive-template .main,.home.template .main,.tag-template .main{overflow:hidden;background:#F2F2F2}.archive-template .pagination,.home.template .pagination,.tag-template .pagination{position:relative;display:none;margin:20px auto;max-width:600px;text-align:center;font-size:13px;font-size:1.3rem}.archive-template .pagination .newer-posts,.home.template .pagination .newer-posts,.tag-template .pagination .newer-posts{position:absolute;left:0}.archive-template .pagination .older-posts,.home.template .pagination .older-posts,.tag-template .pagination .older-posts{position:absolute;right:0}.header{overflow:hidden;max-height:100vh;background-color:#333;background-position:center;background-size:cover}.header .header-background{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:100%;height:100%;background:rgba(0,0,0,.7)}.header a{color:gray}.header a:hover{color:#000}.header .header-content{margin:auto;padding:60px 20px 20px 20px;width:600px;color:#FFF}.header .header-content h1{margin-right:0;margin-bottom:20px;margin-left:0;font-weight:400;cursor:default;-webkit-animation-delay:.5s;animation-delay:.5s}.header .blog-content .blog-title{float:left;margin:0;border:0;color:#FFF;color:gray;letter-spacing:0;font-weight:700;font-size:14px;font-size:1.4rem;line-height:60px}.header .blog-content .blog-title:hover{color:#000}.header .blog-content .blog-description{display:none;float:left;margin-left:10px;color:#ccc;font-size:14px;font-size:1.4rem;line-height:60px;cursor:default}#footer,#footer .bottom .attribution a{color:#999}@media (min-width:550px){.header .blog-content .blog-description{display:block}}.header .blog-content nav.links{float:right;line-height:60px;cursor:default}.header .blog-content nav.links ul{margin:0;list-style:none;cursor:default}.header .blog-content nav.links ul li{display:inline-block;cursor:default}#footer{background:#252525;text-transform:uppercase;font-size:12px;font-size:1.2rem;-webkit-animation-delay:1s;animation-delay:1s}#footer .colophon{margin:0 auto;padding:50px 20px;max-width:600px}#footer .colophon section{margin:10px 0}#footer .colophon section:first-child{margin-top:0}#footer .colophon section:last-child{margin-bottom:0}#footer .bottom{padding:20px 20px;background:#1a1919}#footer .bottom .attribution{margin:0 auto;max-width:600px}#footer .bottom .attribution a:hover{color:#FFF}#footer .bottom .attribution a i.fa.fa-heart{color:#d85151}#footer a{border-color:rgba(255,255,255,0);color:#FFF}#footer a:hover{border-color:#FFF}.author-template .header{position:relative;background:#000;color:gray}@media (min-width:400px){.author-template .header{height:500px;background-position:center;background-size:cover}}@media (min-width:550px){.author-template .header{height:600px;background-position:center;background-size:cover}}@media (min-width:1400px){.author-template .header{height:700px;background-position:center;background-size:cover}}.author-template .header a{color:gray}.author-template .header a:hover{color:#fff}.author-template .header .header-background{background:rgba(0,0,0,.7)}.author-template .header .blog-content{position:absolute;box-sizing:border-box;padding:0 20px;width:100%}.author-template .header .blog-content .blog-title{margin:0;color:#FFF;letter-spacing:0;font-size:14px;font-size:1.4rem}.author-template .header .blog-content .blog-title:hover{color:#fff}.author-template .header .blog-content .links a{color:#FFF}.author-template .header .blog-content .links a:hover{color:#fff}.home-template .header:not(.cover-image){position:relative;height:60px;background:#FFF;color:gray}.home-template .header:not(.cover-image) .header-background{background:0 0}.home-template .header:not(.cover-image) .blog-content{position:absolute;box-sizing:border-box;padding:0 20px;width:100%}.home-template .header:not(.cover-image) .blog-content .blog-title{margin:0;letter-spacing:0;font-size:14px;font-size:1.4rem}.tag-template .header{position:relative;height:60px;background:#000;color:gray}@media (min-width:400px){.tag-template .header{height:500px;background-position:center;background-size:cover}}@media (min-width:550px){.tag-template .header{height:600px;background-position:center;background-size:cover}}@media (min-width:1400px){.tag-template .header{height:700px;background-position:center;background-size:cover}}.tag-template .header .header-background{background:rgba(0,0,0,.7)}.tag-template .header .blog-content{position:absolute;box-sizing:border-box;padding:0 20px;width:100%}.tag-template .header .blog-content .blog-title{margin:0;color:gray;letter-spacing:0;font-size:14px;font-size:1.4rem}.tag-template .header .blog-content .blog-description{display:none}.post{margin:0 auto;max-width:600px;-webkit-animation-delay:1.25s;animation-delay:1.25s}.post .post-content>:first-child{margin-top:0}.post .post-content>:last-child{margin-bottom:0}.post-template .main{padding:40px 20px;background:#FFF}
/*# sourceMappingURL=data:application/json;base64, */